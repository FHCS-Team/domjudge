{% extends 'jury/base.html.twig' %}

{% block title %}Manage Rubric Attachments - {{ rubric.name }}{% endblock %}

{% block content %}
<ul class="nav nav-tabs mb-4">
    <li class="nav-item">
        <a class="nav-link" href="{{ path('jury_hackathon_display', {'contestId': contest.cid}) }}">Overview</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" href="{{ path('jury_hackathon_problems', {'contestId': contest.cid}) }}">Problems</a>
    </li>
    <li class="nav-item">
        {# Phases removed - feature disabled #}
    </li>
</ul>

<div class="container mt-4">
    <h1>Manage Attachments for Rubric: <b>{{ rubric.name }}</b></h1>
    <div class="mb-3">
        <a href="{{ path('jury_hackathon_edit_problem_display', {'contestId': contest.cid, 'problemId': problem.probid}) }}" class="btn btn-secondary">&larr; Back to Problem Display</a>
    </div>
    
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card mb-3">
                <div class="card-header">Rubric Information</div>
                <div class="card-body">
                    <p><strong>Name:</strong> {{ rubric.name }}</p>
                    <p><strong>Type:</strong> {{ rubric.type }}</p>
                    <p><strong>Weight:</strong> {{ rubric.weight }}</p>
                    <p><strong>Threshold:</strong> {{ rubric.threshold ?? 'N/A' }}</p>
                    <p><strong>Description:</strong> {{ rubric.description ?? 'No description' }}</p>
                </div>
            </div>

            <div class="card">
                <div class="card-header">Add New Attachment</div>
                <div class="card-body">
                    {{ form_start(attachmentForm, {'attr': {'enctype': 'multipart/form-data'}}) }}

                    <div class="mb-3">
                        {{ form_label(attachmentForm.name) }}
                        {{ form_widget(attachmentForm.name, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(attachmentForm.name) }}
                        <div class="form-text">Display name for this attachment</div>
                    </div>

                    <div class="mb-3">
                        {{ form_label(attachmentForm.visibility) }}
                        {{ form_widget(attachmentForm.visibility, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(attachmentForm.visibility) }}
                        <div class="form-text">Attachment visibility: public, participant, hidden, private.</div>
                    </div>

                    <div id="visibility-other-row" class="mb-3 d-none">
                        <label class="form-label">Custom visibility</label>
                        <input type="text" id="visibilityOther" class="form-control" placeholder="Enter custom visibility label">
                    </div>

                    <div class="mb-3">
                        {{ form_label(attachmentForm.type) }}
                        {{ form_widget(attachmentForm.type, {'attr': {'class': 'form-control attachment-type-select'}}) }}
                        {{ form_errors(attachmentForm.type) }}
                        <div class="form-text">Content type: pre, post, script, example, template, or other.</div>
                    </div>

                    <div id="type-custom-row" class="mb-3 d-none">
                        <label class="form-label">Custom type</label>
                        {{ form_widget(attachmentForm.type_custom, {'attr': {'class': 'form-control', 'id': 'typeCustom'}}) }}
                        {{ form_errors(attachmentForm.type_custom) }}
                    </div>

                    <div id="file-row" class="mb-3">
                        {{ form_label(attachmentForm.content) }}
                        {{ form_widget(attachmentForm.content, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(attachmentForm.content) }}
                        <div class="form-text">Upload a file (max 20MB) or leave empty to use a URL</div>
                    </div>

                    <div id="url-row" class="mb-3 d-none">
                        {{ form_label(attachmentForm.url) }}
                        {{ form_widget(attachmentForm.url, {'attr': {'class': 'form-control', 'id': 'attachmentUrl'}}) }}
                        {{ form_errors(attachmentForm.url) }}
                        <div class="form-text">Or provide a URL instead of uploading a file</div>
                    </div>

                    <div class="mb-3">
                        {{ form_label(attachmentForm.description) }}
                        {{ form_widget(attachmentForm.description, {'attr': {'class': 'form-control', 'rows': 3}}) }}
                        {{ form_errors(attachmentForm.description) }}
                        <div class="form-text">Optional description of this attachment</div>
                    </div>

                    <div class="d-flex gap-2">
                        {{ form_widget(attachmentForm.add) }}
                        <button type="button" id="toggle-url" class="btn btn-outline-secondary">Use URL instead</button>
                    </div>

                    {{ form_end(attachmentForm) }}
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">Existing Attachments</div>
                <div class="card-body">
                    {% if attachments|length > 0 %}
                        <div class="list-group">
                        {% for attachment in attachments %}
                            <div class="list-group-item d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1">
                                    <div class="d-flex align-items-center mb-1">
                                        <h6 class="mb-0 me-2">{{ attachment.name }}</h6>
                                        <span class="badge bg-info me-1">{{ attachment.type|default('file') }}</span>
                                        {% if attachment.mimeType %}
                                            <span class="badge bg-secondary">{{ attachment.mimeType }}</span>
                                        {% endif %}
                                        {% if attachment.visibility %}
                                            <span class="badge bg-primary ms-2">{{ attachment.visibility }}</span>
                                        {% endif %}
                                    </div>
                                    {% if attachment.description %}
                                        <p class="mb-1 text-muted small">{{ attachment.description }}</p>
                                    {% endif %}
                                    {% if attachment.url %}
                                        <div class="mb-1">
                                            <a href="{{ attachment.url }}" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-external-link-alt"></i> Open
                                            </a>
                                        </div>
                                    {% endif %}
                                </div>
                                <div class="ms-2">
                                    <form method="post" action="{{ path('jury_rubric_attachment_delete', {'contestId': contest.cid, 'problemId': problem.probid, 'rubricId': rubric.rubricid, 'attachmentId': attachment.attachmentid}) }}" class="d-inline">
                                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this attachment?')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        {% endfor %}
                        </div>
                    {% else %}
                        <div class="text-muted">No attachments yet for this rubric.</div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block extrafooter %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    var toggleUrl = document.getElementById('toggle-url');
    var fileRow = document.getElementById('file-row');
    var urlRow = document.getElementById('url-row');
    var typeSelect = document.querySelector('.attachment-type-select');
    var typeCustomRow = document.getElementById('type-custom-row');
    var typeCustomInput = document.getElementById('typeCustom');
    var visibilitySelect = document.querySelector('select[name$="[visibility]"]');
    var visibilityOtherRow = document.getElementById('visibility-other-row');
    var visibilityOtherInput = document.getElementById('visibilityOther');

    if (toggleUrl && fileRow && urlRow) {
        function isVisible(el) {
            if (!el) return false;
            var cs = window.getComputedStyle(el);
            return cs && cs.display !== 'none' && el.offsetParent !== null;
        }

        function showUrl() {
            urlRow.classList.remove('d-none');
            fileRow.classList.add('d-none');
            toggleUrl.innerText = 'Use file instead';
            toggleUrl.setAttribute('aria-pressed', 'true');
        }

        function showFile() {
            urlRow.classList.add('d-none');
            fileRow.classList.remove('d-none');
            toggleUrl.innerText = 'Use URL instead';
            toggleUrl.setAttribute('aria-pressed', 'false');
        }

        // Initialize button text based on actual visibility on load
        if (isVisible(urlRow)) {
            toggleUrl.innerText = 'Use file instead';
            toggleUrl.setAttribute('aria-pressed', 'true');
        } else {
            toggleUrl.innerText = 'Use URL instead';
            toggleUrl.setAttribute('aria-pressed', 'false');
        }

        toggleUrl.addEventListener('click', function() {
            if (isVisible(urlRow)) {
                showFile();
            } else {
                showUrl();
            }
        });
    }

    function updateTypeCustom() {
        if (!typeSelect) return;
        var v = typeSelect.value;
        if (v === '') {
            typeCustomRow.style.display = '';
        } else {
            typeCustomRow.style.display = 'none';
        }
    }

    function updateVisibilityOther() {
        if (!visibilitySelect) return;
        if (visibilitySelect.value === 'other') {
            visibilityOtherRow.style.display = '';
        } else {
            visibilityOtherRow.style.display = 'none';
        }
    }

    if (typeSelect) {
        typeSelect.addEventListener('change', updateTypeCustom);
        updateTypeCustom();
    }
    if (visibilitySelect) {
        visibilitySelect.addEventListener('change', updateVisibilityOther);
        updateVisibilityOther();
    }
});
</script>
{% endblock %}